ATIVIDADE 1 

PRIMEIRO PASSO - BAIXAR ARQUIVO UC4ATIVIDADES - OK
SEGUNDO PASSO - CRIAR USUÁRIOS - OK
TERCEIRO PASSO - DAR PERMISSÃO APENAS PARA SELECT PARA AS TABELAS  - OK
QUARTO PASSO - CRIAR A ROLE - OK
QUINTO PASSO - DAR PERMISSÃO PARA ROLE - OK

CRIAR UM USUÁRIO CHAMADO USER_RELATORIO.
CRIE UMA ROLE PARA O USUÁRIO, COM ACESSO AO COMANDO SELECT DE TODAS TABELAS DA BASE DE DADOS UC4ATIVIDADES. 
NÃO PODE SER DEFINIDO PARE ESTE USUÁRIO NENHUM OUTRO COMANDO DDL OU DML, ALÉM DE SELECT.

PRIMEIRO PASSO - CRIAR USUÁRIO - OK
SEGUNDO PASSO - DAR PERMISSÃO PARA SELECT, INSERT, UPDATE E DELETE - OK
TERCEIRO PASSO - CRIAR UMA ROLE - OK

CRIE USUÁRIO CHAMADO USER_FUNCIONARIO.
CRIE ROLE PARA ESTE USUÁRIO, ELE VAI PODER MANIPULAR AS TABELAS DE VENDA, CLIENTE E PRODUTO DA BASE DE DADOS.
ELE SÓ PODE FAZER OS COMANDOS DE SELECT, INSERT, UPDATE E DELETE. 

PRIMEIRO PASSO - ABRIR PDF DE LEITURA DE BACKUPS - OK
SEGUNDO PASSO - CRIAR UM ESBOSO DE BACKUPS - OK 
TERCEIRO PASSO - PASSAR PELO CHATGPT - OK
QUARTO PASSO - SALVAR GITHUB - OK
QUINTO PASSO - ENVIAR ARQUIVOS COMPAQUITADOS - OK

ELABORAR UM PLANO DE BACKUPS REGULAR DA BASE DE DADOS
PARA RODAR PERIODICAMENTE ESPECIFICAR O PERÉIODO OU UM AGENDAMENTO USANDO UMA FERRAMENTA AUTOMATIZADA.
PODE-SE UTILIZAR COMO PONTO DE PARTIDA QUALQUER PONTO DE PARTIDA QUALQUER EXEMPLO DE PLANO DE BACKUP EXPLICADO NO CONTEÚDO DESTA UC.



ATIVIDADE 2

PARTE - I
CRIAR UMA PROCEDURE QUE RECEBA ID DE CLIENTE - OK
CRIAR UMA PROCEDURE QUE RECEBA DATA INCIAL
CRIAR UMA PROCEDURE QUE RECEBA DATA FINAL
CRIAR UMA PROCEDURE QUE RECEBA LITAS DE COMPRAS REALIZADAS PELO CLIENTE ENTRE AS DATAS INFORMADAS
MOSTRANDO O NOME DO CLIENTE, ID DA COMPRA, TOTAL, NOME E QUANTIDADE DE CADA PRODUTO COMPRADO
NO SCRIPT INCLUA O CÓDIGO DE CRIAÇÃO E O COMANDO DE CHAMADA DA PROCEDURE. 

PLANO DE EXECUÇÃO - 

ASSISTIR NOVAMENTE A AULA DE PROCEDURE 
VERIFICAR MODO DE SELECT 


PARTE - II
CRIAR UMA FUNCTION QUE RECEBA ID DE CLIENTE E RETORNE SE O CLIENTE É PREMIUM OU REGULAR.
UM CLIENTE É PREMIUM SE JÁ REALIZOU MAIS DE R$ 10 MILL EM COMPRAS NOS ULTIMOS DOIS ANOS.
UM CLIENTE É REGULAR SE ANO CONTRÁRIO. 
NO SCRIPT INCLUA O CÓDIGO DE CRIAÇÃO E O COMANDO DE CHAMADA DA FUNCTION.

PLANO DE EXECUÇÃO - 

ASSISTIR NOVAMENTE AULA DE PROCEDURE 
CRIAR UM IF E ELSE

PARTE - III

CRIE UM TRIGGER QUE ATUE SOBRE A TABELA USUARIO
QUANDO INCLUIR UM NOVO USUÁRIO APLIQUE AUTOMATICAMENTE MD5() À COLUNA SENHA
UTILIZE NESTA AITVIDADE VARIÁVEIS COM NEW.

PLANO DE EXECUÇÃO -  

ATIVIDADE 3

ATIVIDADE 4

ATIVIDADE 5

PI - 3

1 - CRIAR USUÁRIO E SENHA
2 - CRIAR PERMISSÕES PARA USUÁRIOS 
3 - CRIAR PESQUISAS FREQUENTES 
4 - CRIAR UMA STORED FUCTION 
5 - CRIAR UMA STORED PROCEDURE
6 - CRIAR UMA TRIGGER
7 - CRIE AO MENOS UM ÍNDICE COMPOSTO PARA UMA DAS TABELAS 
8 - ESCREVER UMA ROTINA DE ADMINISTRAÇÃO DE BANCO DE DADOS, PRECENDO BACKUPS, RESTORE  E CHECAGEM DE INTEGRIDADE PERIÓDICA

Crie um stored procedure que receba  id de cliente, data inicial e data final e que mostre a lista de compras realizadas pelo referido cliente entre as datas informadas (incluindo essas datas), mostrando nome do cliente, id da compra, total, nome e quantidade de cada produto comprado. No script, inclua o código de criação e o comando de chamada da procedure. usando essas informações 
tabela cliente colunas, id,nome, cpf, endereco, telefone, usuario_id
tabela item_venda colunas, quantidade, valor_unitario, subtotal, nome_produto, venda_id, produto_id
tabela produto colunas, id, nome, descricao, estoque, fabricante
tabela venda, id, data, data_envio, status, cliente_id, data_pagamento 